name: Docker Build and Push

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      image_name:
        required: true
        type: string
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      password:
        required: false
        type: string
      username:
        required: false
        type: string
      platforms:
        required: false
        type: string
        default: linux/amd64
    secrets:
      GCR_SERVICE_ACCOUNT_KEY:
        required: false
        
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to ${{ inputs.registry }} Container registry
      if: ${{ inputs.registry == 'ghcr.io' }}
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to ${{ inputs.registry }} Container registry
      if: contains(inputs.registry, 'pkg.dev')
      uses: FhenixProtocol/actions/.github/actions/gcr-login@master
      with:
        service_account_key: ${{ secrets.GCR_SERVICE_ACCOUNT_KEY }}
        registry: ${{ inputs.registry }}

    - name: Extract metadata (tags, labels) Docker image.
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image_name }}
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build and push  ${{ inputs.image_name }} Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ inputs.platforms }}
        file: ${{ inputs.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


    